# Generated by Django 4.2.13 on 2024-05-15 19:18

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='user_details',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('email', models.EmailField(max_length=254, primary_key=True, serialize=False, unique=True)),
                ('dob', models.DateField()),
                ('address', models.TextField()),
                ('mobile', models.CharField(max_length=10)),
                ('role', models.IntegerField()),
                ('institute', models.CharField(max_length=200)),
                ('role_desc', models.TextField()),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='course',
            fields=[
                ('course_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('course_name', models.CharField(max_length=200)),
                ('publish_date', models.DateTimeField()),
                ('course_duration', models.DurationField()),
                ('category', models.CharField(max_length=100)),
                ('topic', models.CharField(max_length=100)),
                ('course_material', models.TextField()),
                ('teacher_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='quiz_desc',
            fields=[
                ('quiz_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('quiz_title', models.CharField(max_length=100)),
                ('quiz_duration', models.DurationField()),
                ('no_of_ques', models.IntegerField()),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.course')),
            ],
        ),
        migrations.CreateModel(
            name='quiz_ques',
            fields=[
                ('ques_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('ques_text', models.TextField()),
                ('opt1', models.CharField(max_length=200)),
                ('opt2', models.CharField(max_length=200)),
                ('opt3', models.CharField(max_length=200)),
                ('opt4', models.CharField(max_length=200)),
                ('correct_opt', models.IntegerField()),
                ('ques_marks', models.IntegerField()),
                ('quiz_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.quiz_desc')),
            ],
        ),
        migrations.CreateModel(
            name='result',
            fields=[
                ('result_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('marks', models.IntegerField()),
                ('result_date', models.DateTimeField()),
                ('quiz_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.quiz_desc')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='feedback',
            fields=[
                ('feedback_date', models.DateTimeField(primary_key=True, serialize=False)),
                ('feedback_text', models.TextField()),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.course')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='enrollment',
            fields=[
                ('enrollment_id', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('enrollment_date', models.DateTimeField()),
                ('enrollment_status', models.CharField(max_length=200)),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.course')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='result_question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marked_option', models.IntegerField()),
                ('question_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.quiz_ques')),
                ('result_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.result')),
            ],
            options={
                'unique_together': {('question_id', 'result_id')},
            },
        ),
    ]
